
@model PaginatedList<library.Models.Student>
@await Component.InvokeAsync("AboutNavbar")
    @await Component.InvokeAsync("ChildSubNavbar")
    <div class="student_wrapper">
        <p>
            <a asp-action="Create" asp-controller="Students">Create New</a>
        </p>
        <form asp-action="Index" method="get">
            <div class="form-actions no-color">
                <p>
                    Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" class="SearchString_input" />
                    <input type="submit" value="Search" class="btn btn-default" /> |
                    <a asp-action="Index">Back to List</a>
                </p>
            </div>
        </form>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Last Name</a>
                    </th>                   
                    <th>
                       Fist Name
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Enrollment Date</a>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstMidName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EnrollmentDate)
                        </td>
                        <td>
                            <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                            <a asp-action="Edit" asp-route-studentID="@item.ID">Edit</a> |
                            <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }

        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-page="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @prevDisabled btn">
            Previous
        </a>
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-page="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @nextDisabled btn">
            Next
        </a>
    </div>
